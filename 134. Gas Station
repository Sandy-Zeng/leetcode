There are N gas stations along a circular route, where the amount of gas at station i is gas[i].

You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.

Return the starting gas station's index if you can travel around the circuit once in the clockwise direction, otherwise return -1.

N个加油站，每个加油站可以补充的汽油总量为gas[i]，从第i个加油站行驶到第i+1个加油站的油耗为cost[i],计算是否存在一个加油站的起点，可以使汽车一直有充足的油
以顺时针行驶一圈回到起点。

Insight：
1、若汽车不能由A到达B，那么A,B之间的加油站也不能作为起点到达B，设C为A,B之间的某个加油站，A到达C时汽油的剩余量>=0,如果以C为起点，即汽车在C时tank=0，
   可以到达B，那么A也一定可以到达B。
2、如果所有加油站的汽油总量大于油耗总量，那么一定存在某个解

Code：
class Solution {
public:
    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {
        int gasNum = gas.size();
        int tank = 0,start = 0,total = 0;
		    for (int i = 0; i < gasNum; ++i) {
            tank=(tank-cost[i]+gas[i]);
			      if(tank<0){
                start = i+1;
                total += tank;
                tank = 0;
            }
		    }
        return total+tank>=0?start:-1;
    }
};

平凡解法，以每个加油站为起点试着走一遍，时间复杂度O（n^2）耗时225ms
上述解法，时间复杂度O（n），耗时2ms
